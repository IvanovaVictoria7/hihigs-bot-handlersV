__all__ = ["router"]

from aiogram import types, Router,F
from sqlalchemy import select
from db import async_session, User
from .keyboard import get_main_keyboard, get_continue_keyboard, get_role_selection_keyboard
import logging
from aiogram.filters import Command
from .callbacks import router as callback_router

router = Router()

# –û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ /start –∏ /status —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message(Command(commands=["start", "status"]))
async def start_handler(message: types.Message):
    async with async_session() as session:
        query = select(User).where(User.user_id == message.from_user.id)
        result = await session.execute(query)

        if result.scalars().all():
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ –ë–î
            await message.answer(
                f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n–¢–≤–æ–π ID: {message.from_user.id}",
                reply_markup=get_main_keyboard()
            )
            logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id={message.from_user.id} –∑–∞–ø—É—Å—Ç–∏–ª –±–æ—Ç–∞ ")
        else:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å
            await message.answer(
                text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–ª—å",
                reply_markup=get_role_selection_keyboard()
            )

# –•–µ–Ω–¥–ª–µ—Ä —Å–ø—Ä–∞–≤–∫–∏
@router.message(Command("help"))
async def help_handler(message: types.Message):
    await message.answer(text="–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
                              "/start - –ù–∞—á–∞—Ç—å\n"
                              "/help - –°–ø—Ä–∞–≤–∫–∞\n"
                              "/status - –°—Ç–∞—Ç—É—Å")

# –ö–Ω–æ–ø–∫–∞ "–û –Ω–∞—Å"
@router.message(lambda message: message.text == "üìñ –û –Ω–∞—Å")
async def about_handler(message: types.Message):
    await message.answer("–≠—Ç–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å!")

# –ö–Ω–æ–ø–∫–∞ "–ü—Ä–æ—Ñ–∏–ª—å"
@router.message(lambda message: message.text == "üë§ –ü—Ä–æ—Ñ–∏–ª—å")
async def profile_handler(message: types.Message):
    await message.answer(f"–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å: ID {message.from_user.id}")

# –•–µ–Ω–¥–ª–µ—Ä –Ω–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
@router.message()
async def echo_message(message: types.Message):
    logging.debug(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å id={message.from_user.id} –ø—Ä–∏—Å–ª–∞–ª –Ω–µ–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º—É—é –∫–æ–º–∞–Ω–¥—É ")
    await message.answer("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö.")